// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MSG1 struct {
	A                    string   `protobuf:"bytes,1,opt,name=A,proto3" json:"A,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MSG1) Reset()         { *m = MSG1{} }
func (m *MSG1) String() string { return proto.CompactTextString(m) }
func (*MSG1) ProtoMessage()    {}
func (*MSG1) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *MSG1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MSG1.Unmarshal(m, b)
}
func (m *MSG1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MSG1.Marshal(b, m, deterministic)
}
func (m *MSG1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MSG1.Merge(m, src)
}
func (m *MSG1) XXX_Size() int {
	return xxx_messageInfo_MSG1.Size(m)
}
func (m *MSG1) XXX_DiscardUnknown() {
	xxx_messageInfo_MSG1.DiscardUnknown(m)
}

var xxx_messageInfo_MSG1 proto.InternalMessageInfo

func (m *MSG1) GetA() string {
	if m != nil {
		return m.A
	}
	return ""
}

func init() {
	proto.RegisterType((*MSG1)(nil), "api.MSG1")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 110 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x12, 0xe1, 0x62, 0xf1,
	0x0d, 0x76, 0x37, 0x14, 0xe2, 0xe1, 0x62, 0x74, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62,
	0x74, 0x34, 0x32, 0xe1, 0xe2, 0x0a, 0xce, 0xcf, 0x4d, 0x0d, 0x2e, 0x29, 0x2a, 0x4d, 0x2e, 0x11,
	0x52, 0xe3, 0xe2, 0x01, 0xf1, 0xdc, 0x4a, 0xf3, 0x92, 0x4b, 0x32, 0xf3, 0xf3, 0x84, 0x38, 0xf5,
	0x12, 0x0b, 0x32, 0xf5, 0x40, 0xda, 0xa4, 0x10, 0x4c, 0x25, 0x86, 0x24, 0x36, 0xb0, 0xb9, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x04, 0x68, 0x27, 0x2f, 0x65, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SomeStructClient is the client API for SomeStruct service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SomeStructClient interface {
	SomeFunction(ctx context.Context, in *MSG1, opts ...grpc.CallOption) (*MSG1, error)
}

type someStructClient struct {
	cc *grpc.ClientConn
}

func NewSomeStructClient(cc *grpc.ClientConn) SomeStructClient {
	return &someStructClient{cc}
}

func (c *someStructClient) SomeFunction(ctx context.Context, in *MSG1, opts ...grpc.CallOption) (*MSG1, error) {
	out := new(MSG1)
	err := c.cc.Invoke(ctx, "/api.SomeStruct/SomeFunction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SomeStructServer is the server API for SomeStruct service.
type SomeStructServer interface {
	SomeFunction(context.Context, *MSG1) (*MSG1, error)
}

func RegisterSomeStructServer(s *grpc.Server, srv SomeStructServer) {
	s.RegisterService(&_SomeStruct_serviceDesc, srv)
}

func _SomeStruct_SomeFunction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MSG1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SomeStructServer).SomeFunction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.SomeStruct/SomeFunction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SomeStructServer).SomeFunction(ctx, req.(*MSG1))
	}
	return interceptor(ctx, in, info, handler)
}

var _SomeStruct_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.SomeStruct",
	HandlerType: (*SomeStructServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SomeFunction",
			Handler:    _SomeStruct_SomeFunction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test.proto",
}
